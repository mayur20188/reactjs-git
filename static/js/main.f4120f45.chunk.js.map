{"version":3,"sources":["components/view/pages/Home.jsx","components/view/pages/about-us.jsx","components/view/pages/MyGoogleMap.jsx","components/routes/index.jsx","components/layout/Header.jsx","components/routes/Routes.jsx","App.js","reportWebVitals.js","index.js"],"names":["Home","Container","Aboutus","MyGoogleMap","array","isAdding","getLocation","useState","selected","setSelected","currentPosition","setCurrentPosition","markerRef","useRef","onSelect","item","success","position","latitude","coords","longitude","lat","lng","footer","className","Button","variant","color","onClick","useEffect","navigator","geolocation","getCurrentPosition","locations","name","location","id","googleMapsApiKey","mapContainerStyle","marginTop","height","width","draggable","zoom","center","map","ref","onDragEnd","e","latLng","onMarkerDragEnd","onCloseClick","style","textAlign","margin","urlpath","routes","path","component","exact","Header","to","Routes","key","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f4120f45.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nconst Home = () => {\r\n    return(\r\n        <>\r\n        <Container>\r\n            <h1>Home</h1>\r\n        </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nconst Aboutus = () => {\r\n    return(\r\n        <>\r\n            <Container>\r\n                <h1>About Us</h1>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Aboutus;","import React, { useState, useEffect, useRef } from 'react';\r\nimport { GoogleMap, LoadScript, Marker, InfoWindow } from '@react-google-maps/api';\r\nimport {Button} from 'react-bootstrap';\r\n\r\nconst MyGoogleMap = ({ array, isAdding, getLocation }) => {\r\n\r\n    const [ selected, setSelected ] = useState({});\r\n    const [ currentPosition, setCurrentPosition ] = useState({});\r\n\r\n    const markerRef = useRef(null);\r\n\r\n    const defaultCenter = {\r\n        lat: 41.3851, lng: 2.1734\r\n    }\r\n\r\n    const onSelect = item => {\r\n        setSelected(item);\r\n    }\r\n\r\n    const success = (position) => {\r\n        const latitude  = position.coords.latitude;\r\n        const longitude = position.coords.longitude;\r\n        const currentPosition = {\r\n            lat: latitude,\r\n            lng: longitude\r\n        }\r\n        setCurrentPosition(currentPosition);\r\n    }\r\n\r\n    const onMarkerDragEnd = (e) => {\r\n        const lat = e.latLng.lat();\r\n        const lng = e.latLng.lng();\r\n        setCurrentPosition({ lat, lng})\r\n    };\r\n\r\n    const footer = (\r\n        <div className=\"footer\">\r\n            <div className=\"inner-footer\">\r\n                <span className=\"location-text\">Choose location and press</span>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={() => getLocation(currentPosition)}>\r\n                    Next\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    const mapStyles = () => {\r\n        if (!isAdding) {\r\n        return {\r\n            marginTop: \"20px\",\r\n            height: \"400px\",\r\n            width: \"100%\"\r\n        }\r\n        } else {\r\n        return {\r\n            marginTop: \"20px\",\r\n            height: \"400px\",\r\n            width: \"100%\"\r\n        }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        navigator.geolocation.getCurrentPosition(success);\r\n    });\r\n\r\n    const locations = [\r\n        {\r\n            name: \"Location 1\",\r\n            location: { \r\n                lat: 41.3954,\r\n                lng: 2.162 \r\n            },\r\n        },\r\n        {\r\n            name: \"Location 2\",\r\n            location: { \r\n                lat: 41.3917,\r\n                lng: 2.1649\r\n            },\r\n        },\r\n        {\r\n        name: \"Location 3\",\r\n            location: { \r\n                lat: 41.3773,\r\n                lng: 2.1585\r\n            },\r\n        },\r\n        {\r\n            name: \"Location 4\",\r\n            location: { \r\n                lat: 41.3797,\r\n                lng: 2.1682\r\n            },\r\n        },\r\n        {\r\n            name: \"Location 5\",\r\n            location: { \r\n                lat: 41.4055,\r\n                lng: 2.1915\r\n            },\r\n        }\r\n    ];\r\n\r\n    return (\r\n    <>\r\n        <LoadScript\r\n            id=\"script-loader\"\r\n            googleMapsApiKey='AIzaSyALsm2XWtRQ5INM_ITSCwYB7rQdI9ILgy0'\r\n            // googleMapsApiKey='AIzaSyDzaeY6bldWIJ421ienoZA8a9bQ0CvPBjw'\r\n        >\r\n            <GoogleMap\r\n                id='example-map'\r\n                mapContainerStyle={mapStyles()}\r\n                draggable={true}\r\n                zoom={12}\r\n                center={currentPosition.lat ? currentPosition : defaultCenter}\r\n            >\r\n            {\r\n                locations ?\r\n                locations.map(item => {\r\n                return (\r\n                <Marker \r\n                    key={item.name}\r\n                    position={item.location}\r\n                    onClick={() => onSelect(item)}\r\n                />\r\n                )\r\n                }) : null\r\n            }\r\n            {\r\n                isAdding ? \r\n                <Marker\r\n                    position={currentPosition}\r\n                    ref={() => markerRef}\r\n                    onDragEnd={(e) => onMarkerDragEnd(e)}\r\n                    draggable={true} /> :\r\n                null\r\n            }\r\n            {\r\n                selected.location ? (\r\n                    <InfoWindow\r\n                        position={selected.location}\r\n                        onCloseClick={() => setSelected({})}\r\n                        >\r\n                        <div className=\"infowindow\">\r\n                            <h4>{selected.name}</h4>\r\n                            {/* <img src={selected.image} className=\"small-image\" alt=\"rental\"/> */}\r\n                        </div>\r\n                    </InfoWindow>\r\n                ) : null\r\n            }\r\n            </GoogleMap>\r\n        </LoadScript>\r\n        {\r\n            isAdding ?\r\n            footer :\r\n            null\r\n        }\r\n\r\n        <div style={{textAlign:'center'}}>\r\n            {\r\n                locations.map(item => {\r\n                    return(\r\n                        <Button key={item.name} color=\"primary\" style={{margin:'10px'}} onClick={() => onSelect(item)}>\r\n                            {item.name}\r\n                        </Button>\r\n                    )\r\n                })\r\n            }\r\n            \r\n        </div>\r\n    </>\r\n)}\r\n\r\nexport default MyGoogleMap;","import Home from \"../view/pages/Home\";\r\nimport Aboutus from \"../view/pages/about-us\";\r\nimport MyGoogleMap from \"../view/pages/MyGoogleMap\";\r\nlet urlpath = \"/reactjs-git/\"\r\n\r\nconst routes = [\r\n    {\r\n        path : `${urlpath}`,\r\n        component : Home,\r\n        exact: true\r\n    },\r\n    {\r\n        path : `${urlpath}about-us`,\r\n        component: Aboutus,\r\n    },\r\n    {\r\n        path : `${urlpath}google-map`,\r\n        component: MyGoogleMap,\r\n    }\r\n]\r\n\r\nexport default routes;","import React from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = () => {\r\n    return(\r\n        <>\r\n            <div className=\"header-wrapper\">\r\n                <Container>\r\n                    <div className=\"menu-part\">\r\n                        <ul className=\"d-flex\">\r\n                            <li><Link exact=\"true\" to=\"/reactjs-git/\">Home</Link></li>\r\n                            <li><Link to=\"/reactjs-git/about-us\">About Us</Link></li>\r\n                            <li><Link to=\"/reactjs-git/google-map\">google map</Link></li>\r\n                        </ul>\r\n                    </div>\r\n                </Container>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport routes from '.';\r\nimport Header from '../layout/Header';\r\n\r\nconst Routes = () => {\r\n    return(\r\n        <>\r\n            <Router>\r\n                <Header/>\r\n                <div className=\"content-view\">\r\n                    {routes.map(({path, exact, component}, key) =>\r\n                        {\r\n                            return (\r\n                                <Route exact={exact} path={path} component={component} key={key} />\r\n                            )\r\n                        }\r\n                    )}\r\n                </div>\r\n            </Router>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Routes;","import '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport 'remixicon/fonts/remixicon.css';\r\nimport './App.css';\r\nimport Routes from './components/routes/Routes';\r\nimport SimpleForm from './components/view/demo/forms/SimpleForm';\r\n\r\nfunction App() {\r\n  return (\r\n    // <div className=\"App\">\r\n    //   <header className=\"App-header\">\r\n    //     <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n    //   </header>\r\n    // </div>\r\n    <div id=\"main-wrapper\">\r\n        <Routes/>\r\n        {/* <SimpleForm/> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}